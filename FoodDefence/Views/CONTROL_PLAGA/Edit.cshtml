@model FoodDefence.Models.CONTROL_PLAGA

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<script src="@Url.Content("~/Scripts/jquery-ui.js")" type="text/javascript"></script>
<link href="@Url.Content("~/Content/jquery-ui.min.css")" rel="stylesheet" type="text/css" />

<div class="callout callout-primary">
    <h4><i class="fa fa-id-card"></i> Editar Tarea</h4>
    <br />
    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()
        <div class="form-horizontal">
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.id)

            <div class="form-row">
                <div class="form-group col-md-6">
                    Cliente
                    <div>
                        @Html.DropDownList("idCliente", null, "Seleccione un cliente", htmlAttributes: new { @class = "form-control", @id = "cmbCliente" })
                    </div>
                </div>
                <div class="form-group col-md-6">
                    Locación
                    <div>
                        @Html.DropDownList("idClienteLocacion", null, htmlAttributes: new { @class = "form-control", @required = "required" })
                        @Html.ValidationMessageFor(model => model.idClienteLocacion, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

            <div class="form-row">     
                <div class="form-group col-md-6">
                    Tipo Trampa
                    <div>
                        @Html.DropDownList("idTipoTrampa", null, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.idTipoTrampa, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group col-md-6">
                    Campo Condición
                    <div>
                        @Html.DropDownList("campoCondicion", null, "Seleccione un Campo", htmlAttributes: new { @class = "form-control", @required = "required" })
                        @Html.ValidationMessageFor(model => model.campoCondicion, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

            <div class="form-row">  
                <div class="form-group col-md-3">
                    <div id="operadorLabel"> 
                        @if(@Model.campoCondicion == "Estado")
                        {       @("Estado");  }
                        else {  @("Operador");}
                        
                    </div>
                    <div class="col-md-15">
                        @Html.DropDownList("operadorCondicion", null, htmlAttributes: new { @class = "form-control" })
                    </div>
                </div>

                <div class="form-group col-md-3" id="idValor">
                    Valor
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.valorCondicion, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.valorCondicion, "", new { @class = "text-danger" })
                    </div>
                </div>
 
                <div class="form-group col-md-6">
                    Tareas
                    <div id="divIdTarea">
                        @Html.ListBox("idTarea", ViewBag.idTarea as MultiSelectList, htmlAttributes: new { @class = "form-control", @id = "idTarea", required = "required", @data_wait = "modal-control", @style = "display:none" })
                        @Html.ValidationMessageFor(model => model.operadorCondicion, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

             <div class="form-group">
                <button type="submit" id="btnGuardar" class="btn btn-outline-success">Guardar</button>
                @Html.ActionLink("Volver al listado", "Index", null, new { @class = "btn btn-outline-primary ml-2", @id = "btnVolver" })
            </div>
            <div id="validaciones" class="alert alert-danger" role="alert">
                <button class="close" data-dismiss="alert"><span>&times;</span></button>
                @ViewBag.ValidacionesControlPlaga
            </div>
        </div>
    }
</div>

</div>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}

<script type="text/javascript">
    var Ingreso = '@ViewBag.ValidacionesControlPlaga'
    var cboTipoTrampa = document.getElementById("idTipoTrampa");
    var arrayIdTareaSelect = @Html.Raw(Json.Encode(@ViewBag.idTareaSelect));

    cboTipoTrampa.addEventListener("change", actTarea);
    selTareas();

    $(document).ready(function () {

        //controles
        if (Ingreso != '') {
            $("#validaciones").show();
        }
        else {
            $("#validaciones").hide();
        }

        $("#idTarea").multiselect({ includeSelectAllOption: true });
        //$("#idTarea").chosen();
        var opeCondicion = $('#campoCondicion').val();
        if (opeCondicion == "Estado") {
            $('#idValor').hide();
            $('#operadorLabel').html("Estado");
        } else {
            $('#operadorLabel').html("Operador");
            $('#idValor').show();
        }      

    });

    $('#cmbCliente').change(function () {
        $("#cmbCliente option[value='']").remove();
        cargarComboLocacion();
    });

    $('#idTipoTrampa').change(function () {
        $("#idTipoTrampa option[value='']").remove();
        cargarComboCampoCondicion();
    });

    $('#campoCondicion').change(function () {
        cargarCondicionEstado();
    });

    function actTarea() {
        $.ajax({
                url: '@Url.Action("actTarea", "CONTROL_PLAGA")'
                , data: {
                    pIdTrampaTipo: cboTipoTrampa.value
                }
            , success: function (data) {
                    $("#divIdTarea").html(data);
                    actMultiCombo();
                }
        });
    }

    function actMultiCombo() {
        $("#idTarea").multiselect({
            includeSelectAllOption: true,
            selectAllText: '¡Marcar todo!',
            delimiterText: ' - ',
        });
        selTareas();
    }

    function selTareas() {
        var cbo = document.getElementById('idTarea');
        for (var i = 0; i < arrayIdTareaSelect.length; i++) {
            for (var z = 0; z < cbo.length; z++) {
                // console.log('cbo: ' + cbo[z].value + ' - arrayIdTareaSelect: ' + arrayIdTareaSelect[i].Value);
                if (cbo[z].value == arrayIdTareaSelect[i].Value) {
                    cbo[z].selected = true;
                }
            }
        }
    }


    function cargarComboLocacion() {
        var lcliente = $('#cmbCliente').val();
        $.ajax({
            url: '@Url.Action("ComboClienteLocacion", "CLIENTE_LOCACION_SECTOR")'
            , type:"GET"
            , dataType: 'json'
            , data: {pCliente: lcliente}
            , success: function (data) {
                $('#idClienteLocacion').empty();
                $('#idClienteLocacion').append("<option value=''>Seleccione una locación</option>");
                $.each(data, function (index, row) {
                    $('#idClienteLocacion').append("<option value='" + row.id + "'>" + row.descripcion + "</option>");
                });
            }
        });
    }

    function cargarComboCampoCondicion() {
        var lTrampaTipo = $('#idTipoTrampa').val();
        $.ajax({
            url: '@Url.Action("ComboCamposControl", "CONTROL_PLAGA")'
            , type:"GET"
            , dataType: 'json'
            , data: { pTrampaTipo: lTrampaTipo }
            , success: function (data) {
                $('#campoCondicion').empty();
                $('#campoCondicion').append("<option value=''>Seleccione una campo Condición</option>");
                $.each(data, function (index, row) {
                    $('#campoCondicion').append("<option value='" + row.campo + "'>" + row.campo + "</option>");
                });
            }
        });
    }

    function cargarCondicionEstado() {
        var opeCondicion = $('#campoCondicion').val();
        var tipo = 0; /*0=Operador, 1=Estado */

        console.log("cargarCondicionEstado");
        if (opeCondicion == "") { return }
        $('#operadorCondicion').empty();
        $('#valorCondicion').val('0');
        
        if (opeCondicion == "Estado") {
            tipo = $('#idTipoTrampa').val();
            $('#idValor').hide();
            $('#operadorLabel').html("Estado");
        } else {
            tipo = 0;
            $('#operadorLabel').html("Operador");
            $('#idValor').show();
        }

        $.ajax({
            url: '@Url.Action("cargarCondicionEstado", "CONTROL_PLAGA")'
            , type:"GET"
            , dataType: 'json'
            , data: { pTipo: tipo }
            , success: function (data) {
                console.log("Data: ", tipo);
                if (tipo == 0) {
                    $('#operadorCondicion').append("<option value=''>Seleccione una Condición</option>");
                } else {
                    $('#operadorCondicion').append("<option value=''>Seleccione un Estado</option>");
                }
                $.each(data, function (index, row) {

                    $('#operadorCondicion').append("<option value='" + row.id + "'>" + row.descripcion + "</option>");
                });
            }
        });
    }

</script>

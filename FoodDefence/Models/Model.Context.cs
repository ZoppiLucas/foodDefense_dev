//------------------------------------------------------------------------------
// <auto-generated>
//     Este código se generó a partir de una plantilla.
//
//     Los cambios manuales en este archivo pueden causar un comportamiento inesperado de la aplicación.
//     Los cambios manuales en este archivo se sobrescribirán si se regenera el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace FoodDefence.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class FoodDefense_DevEntities : DbContext
    {
        public FoodDefense_DevEntities()
            : base("name=FoodDefense_DevEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<CAMPO_REQUERIDO_CARGA_CONTROL_TRAMPA> CAMPO_REQUERIDO_CARGA_CONTROL_TRAMPA { get; set; }
        public virtual DbSet<CLIENTE> CLIENTE { get; set; }
        public virtual DbSet<CLIENTE_CONTACTO> CLIENTE_CONTACTO { get; set; }
        public virtual DbSet<CLIENTE_LOCACION> CLIENTE_LOCACION { get; set; }
        public virtual DbSet<CLIENTE_LOCACION_RESPONSABLE> CLIENTE_LOCACION_RESPONSABLE { get; set; }
        public virtual DbSet<CLIENTE_LOCACION_RESPONSABLE_CONTACTO> CLIENTE_LOCACION_RESPONSABLE_CONTACTO { get; set; }
        public virtual DbSet<CLIENTE_LOCACION_SECTOR> CLIENTE_LOCACION_SECTOR { get; set; }
        public virtual DbSet<CONTACTO_TIPO> CONTACTO_TIPO { get; set; }
        public virtual DbSet<DOCUMENTO_TIPO> DOCUMENTO_TIPO { get; set; }
        public virtual DbSet<EMPLEADO_CONTACTO> EMPLEADO_CONTACTO { get; set; }
        public virtual DbSet<MENU> MENU { get; set; }
        public virtual DbSet<MENU_USUARIO> MENU_USUARIO { get; set; }
        public virtual DbSet<ORDEN_TRABAJO> ORDEN_TRABAJO { get; set; }
        public virtual DbSet<ORDEN_TRABAJO_ESTADO> ORDEN_TRABAJO_ESTADO { get; set; }
        public virtual DbSet<PROVINCIA> PROVINCIA { get; set; }
        public virtual DbSet<TRAMPA> TRAMPA { get; set; }
        public virtual DbSet<TRAMPA_CONTROL_ACCION> TRAMPA_CONTROL_ACCION { get; set; }
        public virtual DbSet<TRAMPA_CONTROL_ESTADO> TRAMPA_CONTROL_ESTADO { get; set; }
        public virtual DbSet<TRAMPA_ESTADO> TRAMPA_ESTADO { get; set; }
        public virtual DbSet<TRAMPA_TIPO> TRAMPA_TIPO { get; set; }
        public virtual DbSet<USUARIO> USUARIO { get; set; }
        public virtual DbSet<TRAMPA_CLIENTE_LOCACION_SECTOR> TRAMPA_CLIENTE_LOCACION_SECTOR { get; set; }
        public virtual DbSet<EMPLEADO> EMPLEADO { get; set; }
        public virtual DbSet<GRAFICOS> GRAFICOS { get; set; }
        public virtual DbSet<ORDEN_TRABAJO_DETALLE_ESTADO> ORDEN_TRABAJO_DETALLE_ESTADO { get; set; }
        public virtual DbSet<ORDEN_TRABAJO_DETALLE> ORDEN_TRABAJO_DETALLE { get; set; }
        public virtual DbSet<USUARIO_TIPO> USUARIO_TIPO { get; set; }
        public virtual DbSet<TAREA> TAREA { get; set; }
        public virtual DbSet<CONTROL_PLAGA> CONTROL_PLAGA { get; set; }
        public virtual DbSet<CONTROL_PLAGA_DETALLE> CONTROL_PLAGA_DETALLE { get; set; }
        public virtual DbSet<ORDEN_TRABAJO_DETALLE_CONTROL_PLAGA> ORDEN_TRABAJO_DETALLE_CONTROL_PLAGA { get; set; }
    
        public virtual ObjectResult<DetalleTrampasOrdenTrabajo_Result> st_getDetalleTrampasOrdenTrabajo(Nullable<int> idOrdenTrabajo)
        {
            var idOrdenTrabajoParameter = idOrdenTrabajo.HasValue ?
                new ObjectParameter("idOrdenTrabajo", idOrdenTrabajo) :
                new ObjectParameter("idOrdenTrabajo", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DetalleTrampasOrdenTrabajo_Result>("st_getDetalleTrampasOrdenTrabajo", idOrdenTrabajoParameter);
        }
    
        public virtual ObjectResult<OrdenesTrabajo_Result> st_getOrdenesTrabajo(string cliente, string empleado, Nullable<System.DateTime> fDesde, Nullable<System.DateTime> fHasta, Nullable<int> estado)
        {
            var clienteParameter = cliente != null ?
                new ObjectParameter("cliente", cliente) :
                new ObjectParameter("cliente", typeof(string));
    
            var empleadoParameter = empleado != null ?
                new ObjectParameter("empleado", empleado) :
                new ObjectParameter("empleado", typeof(string));
    
            var fDesdeParameter = fDesde.HasValue ?
                new ObjectParameter("fDesde", fDesde) :
                new ObjectParameter("fDesde", typeof(System.DateTime));
    
            var fHastaParameter = fHasta.HasValue ?
                new ObjectParameter("fHasta", fHasta) :
                new ObjectParameter("fHasta", typeof(System.DateTime));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("estado", estado) :
                new ObjectParameter("estado", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<OrdenesTrabajo_Result>("st_getOrdenesTrabajo", clienteParameter, empleadoParameter, fDesdeParameter, fHastaParameter, estadoParameter);
        }
    
        public virtual ObjectResult<AutocompleteTrampas> st_AutocompleteTrampas(string numero, Nullable<int> idTrampaTipo)
        {
            var numeroParameter = numero != null ?
                new ObjectParameter("numero", numero) :
                new ObjectParameter("numero", typeof(string));
    
            var idTrampaTipoParameter = idTrampaTipo.HasValue ?
                new ObjectParameter("idTrampaTipo", idTrampaTipo) :
                new ObjectParameter("idTrampaTipo", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<AutocompleteTrampas>("st_AutocompleteTrampas", numeroParameter, idTrampaTipoParameter);
        }
    
        public virtual ObjectResult<ListadoTrampaClienteLocacionSector_Result> st_getListadoTrampaClienteLocacionSector(string cliente, string locacion, string sector, string numero, Nullable<int> tipotrampa)
        {
            var clienteParameter = cliente != null ?
                new ObjectParameter("cliente", cliente) :
                new ObjectParameter("cliente", typeof(string));
    
            var locacionParameter = locacion != null ?
                new ObjectParameter("locacion", locacion) :
                new ObjectParameter("locacion", typeof(string));
    
            var sectorParameter = sector != null ?
                new ObjectParameter("sector", sector) :
                new ObjectParameter("sector", typeof(string));
    
            var numeroParameter = numero != null ?
                new ObjectParameter("numero", numero) :
                new ObjectParameter("numero", typeof(string));
    
            var tipotrampaParameter = tipotrampa.HasValue ?
                new ObjectParameter("tipotrampa", tipotrampa) :
                new ObjectParameter("tipotrampa", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ListadoTrampaClienteLocacionSector_Result>("st_getListadoTrampaClienteLocacionSector", clienteParameter, locacionParameter, sectorParameter, numeroParameter, tipotrampaParameter);
        }
    
        public virtual ObjectResult<DatosExportacion_Result> st_getDatosExportacion(Nullable<int> pCliente, Nullable<int> pLocacion, Nullable<System.DateTime> pPeriodo)
        {
            var pClienteParameter = pCliente.HasValue ?
                new ObjectParameter("pCliente", pCliente) :
                new ObjectParameter("pCliente", typeof(int));
    
            var pLocacionParameter = pLocacion.HasValue ?
                new ObjectParameter("pLocacion", pLocacion) :
                new ObjectParameter("pLocacion", typeof(int));
    
            var pPeriodoParameter = pPeriodo.HasValue ?
                new ObjectParameter("pPeriodo", pPeriodo) :
                new ObjectParameter("pPeriodo", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DatosExportacion_Result>("st_getDatosExportacion", pClienteParameter, pLocacionParameter, pPeriodoParameter);
        }
    
        public virtual ObjectResult<validarTrampa_Result> st_validarTrampaCargaApp(Nullable<int> idTrampaClienteLocacionSector, Nullable<int> idEmpleado)
        {
            var idTrampaClienteLocacionSectorParameter = idTrampaClienteLocacionSector.HasValue ?
                new ObjectParameter("idTrampaClienteLocacionSector", idTrampaClienteLocacionSector) :
                new ObjectParameter("idTrampaClienteLocacionSector", typeof(int));
    
            var idEmpleadoParameter = idEmpleado.HasValue ?
                new ObjectParameter("idEmpleado", idEmpleado) :
                new ObjectParameter("idEmpleado", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<validarTrampa_Result>("st_validarTrampaCargaApp", idTrampaClienteLocacionSectorParameter, idEmpleadoParameter);
        }
    
        public virtual ObjectResult<TrampaApp_Result> st_getTrampaApp(Nullable<int> idClienteLocacion, Nullable<int> idTrampaTipo, string numeroTrampa, Nullable<int> idEmpleado)
        {
            var idClienteLocacionParameter = idClienteLocacion.HasValue ?
                new ObjectParameter("idClienteLocacion", idClienteLocacion) :
                new ObjectParameter("idClienteLocacion", typeof(int));
    
            var idTrampaTipoParameter = idTrampaTipo.HasValue ?
                new ObjectParameter("idTrampaTipo", idTrampaTipo) :
                new ObjectParameter("idTrampaTipo", typeof(int));
    
            var numeroTrampaParameter = numeroTrampa != null ?
                new ObjectParameter("numeroTrampa", numeroTrampa) :
                new ObjectParameter("numeroTrampa", typeof(string));
    
            var idEmpleadoParameter = idEmpleado.HasValue ?
                new ObjectParameter("idEmpleado", idEmpleado) :
                new ObjectParameter("idEmpleado", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<TrampaApp_Result>("st_getTrampaApp", idClienteLocacionParameter, idTrampaTipoParameter, numeroTrampaParameter, idEmpleadoParameter);
        }
    
        public virtual ObjectResult<LastTrampaApp_Result> st_getLastTrampaApp(Nullable<int> idOrdenTrabajoDetalle)
        {
            var idOrdenTrabajoDetalleParameter = idOrdenTrabajoDetalle.HasValue ?
                new ObjectParameter("idOrdenTrabajoDetalle", idOrdenTrabajoDetalle) :
                new ObjectParameter("idOrdenTrabajoDetalle", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<LastTrampaApp_Result>("st_getLastTrampaApp", idOrdenTrabajoDetalleParameter);
        }
    
        public virtual ObjectResult<string> st_control_cantidad_requerida_estado_trampa(Nullable<int> idTrampaClienteLocacionSector, Nullable<int> idAccion, Nullable<int> idEstado, Nullable<int> moscas, Nullable<int> mosquitas, Nullable<int> polillas, Nullable<int> mariposas, Nullable<int> minusculos, Nullable<int> cantidad, Nullable<int> roedor, Nullable<int> insecto, Nullable<int> cucaGermanica, Nullable<int> cucaAmericana, string observaciones)
        {
            var idTrampaClienteLocacionSectorParameter = idTrampaClienteLocacionSector.HasValue ?
                new ObjectParameter("idTrampaClienteLocacionSector", idTrampaClienteLocacionSector) :
                new ObjectParameter("idTrampaClienteLocacionSector", typeof(int));
    
            var idAccionParameter = idAccion.HasValue ?
                new ObjectParameter("idAccion", idAccion) :
                new ObjectParameter("idAccion", typeof(int));
    
            var idEstadoParameter = idEstado.HasValue ?
                new ObjectParameter("idEstado", idEstado) :
                new ObjectParameter("idEstado", typeof(int));
    
            var moscasParameter = moscas.HasValue ?
                new ObjectParameter("moscas", moscas) :
                new ObjectParameter("moscas", typeof(int));
    
            var mosquitasParameter = mosquitas.HasValue ?
                new ObjectParameter("mosquitas", mosquitas) :
                new ObjectParameter("mosquitas", typeof(int));
    
            var polillasParameter = polillas.HasValue ?
                new ObjectParameter("polillas", polillas) :
                new ObjectParameter("polillas", typeof(int));
    
            var mariposasParameter = mariposas.HasValue ?
                new ObjectParameter("mariposas", mariposas) :
                new ObjectParameter("mariposas", typeof(int));
    
            var minusculosParameter = minusculos.HasValue ?
                new ObjectParameter("minusculos", minusculos) :
                new ObjectParameter("minusculos", typeof(int));
    
            var cantidadParameter = cantidad.HasValue ?
                new ObjectParameter("cantidad", cantidad) :
                new ObjectParameter("cantidad", typeof(int));
    
            var roedorParameter = roedor.HasValue ?
                new ObjectParameter("roedor", roedor) :
                new ObjectParameter("roedor", typeof(int));
    
            var insectoParameter = insecto.HasValue ?
                new ObjectParameter("insecto", insecto) :
                new ObjectParameter("insecto", typeof(int));
    
            var cucaGermanicaParameter = cucaGermanica.HasValue ?
                new ObjectParameter("cucaGermanica", cucaGermanica) :
                new ObjectParameter("cucaGermanica", typeof(int));
    
            var cucaAmericanaParameter = cucaAmericana.HasValue ?
                new ObjectParameter("cucaAmericana", cucaAmericana) :
                new ObjectParameter("cucaAmericana", typeof(int));
    
            var observacionesParameter = observaciones != null ?
                new ObjectParameter("observaciones", observaciones) :
                new ObjectParameter("observaciones", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("st_control_cantidad_requerida_estado_trampa", idTrampaClienteLocacionSectorParameter, idAccionParameter, idEstadoParameter, moscasParameter, mosquitasParameter, polillasParameter, mariposasParameter, minusculosParameter, cantidadParameter, roedorParameter, insectoParameter, cucaGermanicaParameter, cucaAmericanaParameter, observacionesParameter);
        }
    
        public virtual ObjectResult<DatosGraficos_Result> st_getDatosGraficos(string pGraficos, Nullable<System.DateTime> pPeriodo, Nullable<int> pClienteLocacion)
        {
            var pGraficosParameter = pGraficos != null ?
                new ObjectParameter("pGraficos", pGraficos) :
                new ObjectParameter("pGraficos", typeof(string));
    
            var pPeriodoParameter = pPeriodo.HasValue ?
                new ObjectParameter("pPeriodo", pPeriodo) :
                new ObjectParameter("pPeriodo", typeof(System.DateTime));
    
            var pClienteLocacionParameter = pClienteLocacion.HasValue ?
                new ObjectParameter("pClienteLocacion", pClienteLocacion) :
                new ObjectParameter("pClienteLocacion", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DatosGraficos_Result>("st_getDatosGraficos", pGraficosParameter, pPeriodoParameter, pClienteLocacionParameter);
        }
    
        public virtual ObjectResult<st_getTrampasOrdenTrabajo_Result> st_getTrampasOrdenTrabajo(string tipoBusqueda, Nullable<int> idClienteLocacion, Nullable<int> idClienteLocacionSector, Nullable<int> idTrampaTipo, string pTrampadesde, string pTrampaHasta)
        {
            var tipoBusquedaParameter = tipoBusqueda != null ?
                new ObjectParameter("tipoBusqueda", tipoBusqueda) :
                new ObjectParameter("tipoBusqueda", typeof(string));
    
            var idClienteLocacionParameter = idClienteLocacion.HasValue ?
                new ObjectParameter("idClienteLocacion", idClienteLocacion) :
                new ObjectParameter("idClienteLocacion", typeof(int));
    
            var idClienteLocacionSectorParameter = idClienteLocacionSector.HasValue ?
                new ObjectParameter("idClienteLocacionSector", idClienteLocacionSector) :
                new ObjectParameter("idClienteLocacionSector", typeof(int));
    
            var idTrampaTipoParameter = idTrampaTipo.HasValue ?
                new ObjectParameter("idTrampaTipo", idTrampaTipo) :
                new ObjectParameter("idTrampaTipo", typeof(int));
    
            var pTrampadesdeParameter = pTrampadesde != null ?
                new ObjectParameter("pTrampadesde", pTrampadesde) :
                new ObjectParameter("pTrampadesde", typeof(string));
    
            var pTrampaHastaParameter = pTrampaHasta != null ?
                new ObjectParameter("pTrampaHasta", pTrampaHasta) :
                new ObjectParameter("pTrampaHasta", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<st_getTrampasOrdenTrabajo_Result>("st_getTrampasOrdenTrabajo", tipoBusquedaParameter, idClienteLocacionParameter, idClienteLocacionSectorParameter, idTrampaTipoParameter, pTrampadesdeParameter, pTrampaHastaParameter);
        }
    
        [DbFunction("FoodDefense_DevEntities", "fn_Fechas")]
        public virtual IQueryable<Nullable<System.DateTime>> fn_Fechas(Nullable<System.DateTime> fechaIni, Nullable<System.DateTime> fechaFin)
        {
            var fechaIniParameter = fechaIni.HasValue ?
                new ObjectParameter("FechaIni", fechaIni) :
                new ObjectParameter("FechaIni", typeof(System.DateTime));
    
            var fechaFinParameter = fechaFin.HasValue ?
                new ObjectParameter("FechaFin", fechaFin) :
                new ObjectParameter("FechaFin", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<Nullable<System.DateTime>>("[FoodDefense_DevEntities].[fn_Fechas](@FechaIni, @FechaFin)", fechaIniParameter, fechaFinParameter);
        }
    
        public virtual ObjectResult<getDatosExportacion_Result> getDatosExportacion(Nullable<int> pCliente, Nullable<int> pLocacion, Nullable<System.DateTime> pPeriodo)
        {
            var pClienteParameter = pCliente.HasValue ?
                new ObjectParameter("pCliente", pCliente) :
                new ObjectParameter("pCliente", typeof(int));
    
            var pLocacionParameter = pLocacion.HasValue ?
                new ObjectParameter("pLocacion", pLocacion) :
                new ObjectParameter("pLocacion", typeof(int));
    
            var pPeriodoParameter = pPeriodo.HasValue ?
                new ObjectParameter("pPeriodo", pPeriodo) :
                new ObjectParameter("pPeriodo", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getDatosExportacion_Result>("getDatosExportacion", pClienteParameter, pLocacionParameter, pPeriodoParameter);
        }
    
        public virtual ObjectResult<st_getCamposControlPlaga_Result> st_getCamposControlPlaga(Nullable<int> pIdTipoTrampa)
        {
            var pIdTipoTrampaParameter = pIdTipoTrampa.HasValue ?
                new ObjectParameter("pIdTipoTrampa", pIdTipoTrampa) :
                new ObjectParameter("pIdTipoTrampa", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<st_getCamposControlPlaga_Result>("st_getCamposControlPlaga", pIdTipoTrampaParameter);
        }
    
        public virtual ObjectResult<st_getEmpListTask_Result> st_getEmpListTask(Nullable<int> idEmpleado, Nullable<System.DateTime> fechaDeTrabajo)
        {
            var idEmpleadoParameter = idEmpleado.HasValue ?
                new ObjectParameter("idEmpleado", idEmpleado) :
                new ObjectParameter("idEmpleado", typeof(int));
    
            var fechaDeTrabajoParameter = fechaDeTrabajo.HasValue ?
                new ObjectParameter("fechaDeTrabajo", fechaDeTrabajo) :
                new ObjectParameter("fechaDeTrabajo", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<st_getEmpListTask_Result>("st_getEmpListTask", idEmpleadoParameter, fechaDeTrabajoParameter);
        }
    
        public virtual int GetListAccionesTareas(Nullable<int> idOrdenTrabajo, Nullable<int> idTipoTrampa, Nullable<int> idOrdenTrabajoDetalle)
        {
            var idOrdenTrabajoParameter = idOrdenTrabajo.HasValue ?
                new ObjectParameter("idOrdenTrabajo", idOrdenTrabajo) :
                new ObjectParameter("idOrdenTrabajo", typeof(int));
    
            var idTipoTrampaParameter = idTipoTrampa.HasValue ?
                new ObjectParameter("idTipoTrampa", idTipoTrampa) :
                new ObjectParameter("idTipoTrampa", typeof(int));
    
            var idOrdenTrabajoDetalleParameter = idOrdenTrabajoDetalle.HasValue ?
                new ObjectParameter("idOrdenTrabajoDetalle", idOrdenTrabajoDetalle) :
                new ObjectParameter("idOrdenTrabajoDetalle", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GetListAccionesTareas", idOrdenTrabajoParameter, idTipoTrampaParameter, idOrdenTrabajoDetalleParameter);
        }
    
        public virtual ObjectResult<st_GetListAccionesTareas_Result> st_GetListAccionesTareas(Nullable<int> idOrdenTrabajo, Nullable<int> idTipoTrampa, Nullable<int> idOrdenTrabajoDetalle)
        {
            var idOrdenTrabajoParameter = idOrdenTrabajo.HasValue ?
                new ObjectParameter("idOrdenTrabajo", idOrdenTrabajo) :
                new ObjectParameter("idOrdenTrabajo", typeof(int));
    
            var idTipoTrampaParameter = idTipoTrampa.HasValue ?
                new ObjectParameter("idTipoTrampa", idTipoTrampa) :
                new ObjectParameter("idTipoTrampa", typeof(int));
    
            var idOrdenTrabajoDetalleParameter = idOrdenTrabajoDetalle.HasValue ?
                new ObjectParameter("idOrdenTrabajoDetalle", idOrdenTrabajoDetalle) :
                new ObjectParameter("idOrdenTrabajoDetalle", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<st_GetListAccionesTareas_Result>("st_GetListAccionesTareas", idOrdenTrabajoParameter, idTipoTrampaParameter, idOrdenTrabajoDetalleParameter);
        }
    
        public virtual ObjectResult<st_GetListaControlPlaga_Result> st_GetListaControlPlaga(string cliente, string cliLoca, Nullable<int> tipoTrampa, string camCond)
        {
            var clienteParameter = cliente != null ?
                new ObjectParameter("Cliente", cliente) :
                new ObjectParameter("Cliente", typeof(string));
    
            var cliLocaParameter = cliLoca != null ?
                new ObjectParameter("CliLoca", cliLoca) :
                new ObjectParameter("CliLoca", typeof(string));
    
            var tipoTrampaParameter = tipoTrampa.HasValue ?
                new ObjectParameter("TipoTrampa", tipoTrampa) :
                new ObjectParameter("TipoTrampa", typeof(int));
    
            var camCondParameter = camCond != null ?
                new ObjectParameter("CamCond", camCond) :
                new ObjectParameter("CamCond", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<st_GetListaControlPlaga_Result>("st_GetListaControlPlaga", clienteParameter, cliLocaParameter, tipoTrampaParameter, camCondParameter);
        }
    }
}
